#import <Foundation/Foundation.h>
#import "ESBackupInfoReq.h"
#import "ESBackupStartReq.h"
#import "ESRsp.h"
#import "ESRspBackupInfoRsp.h"
#import "ESRspBackupStartRsp.h"
#import "ESRspBackupTransId.h"
#import "ESRspBackupUSBDevice.h"
#import "ESApi.h"

/**
* EulixOS Platform Server API
* Platform open APIs
*
* OpenAPI spec version: 0.1.0
* Contact: dev-support@eulixos.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface ESBackupApi: NSObject <ESApi>

extern NSString* kESBackupApiErrorDomain;
extern NSInteger kESBackupApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(ESApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 获取备份事务id
/// 获取备份事务id
///
/// 
///  code:200 message:"返回值"
///
/// @return ESRspBackupTransId*
-(NSURLSessionTask*) spaceV1ApiBackupIdGetWithCompletionHandler: 
    (void (^)(ESRspBackupTransId* output, NSError* error)) handler;


/// 备份的状态信息（进度）
/// 备份的状态信息（进度）
///
/// @param backupInfoReq 获取备份进度状态的请求参数
/// 
///  code:200 message:"备份返回值"
///
/// @return ESRspBackupInfoRsp*
-(NSURLSessionTask*) spaceV1ApiBackupInfoPostWithBackupInfoReq: (ESBackupInfoReq*) backupInfoReq
    completionHandler: (void (^)(ESRspBackupInfoRsp* output, NSError* error)) handler;


/// 检查USB外置设备是否准备就绪
/// 检查USB外置设备是否准备就绪
///
/// 
///  code:200 message:"返回值"
///
/// @return ESRspBackupUSBDevice*
-(NSURLSessionTask*) spaceV1ApiBackupMountPostWithCompletionHandler: 
    (void (^)(ESRspBackupUSBDevice* output, NSError* error)) handler;


/// 备份文件
/// 备份文件
///
/// @param backupStartReq 获取备份进度状态的请求参数
/// 
///  code:200 message:"返回值"
///
/// @return ESRspBackupStartRsp*
-(NSURLSessionTask*) spaceV1ApiBackupStartPostWithBackupStartReq: (ESBackupStartReq*) backupStartReq
    completionHandler: (void (^)(ESRspBackupStartRsp* output, NSError* error)) handler;


/// 停止备份
/// 停止备份
///
/// @param backupInfoReq 获取备份进度状态的请求参数
/// 
///  code:200 message:"停止备份返回值"
///
/// @return ESRsp*
-(NSURLSessionTask*) spaceV1ApiBackupStopPostWithBackupInfoReq: (ESBackupInfoReq*) backupInfoReq
    completionHandler: (void (^)(ESRsp* output, NSError* error)) handler;



@end
