#import <Foundation/Foundation.h>
#import "ESMessage.h"
#import "ESMessageIdInfo.h"
#import "ESNotificationPageQueryInfo.h"
#import "ESResponseBaseInteger.h"
#import "ESResponseBaseLong.h"
#import "ESResponseBaseNotificationEntity.h"
#import "ESResponseBaseNotificationPageInfo.h"
#import "ESStatusResult.h"
#import "ESApi.h"

/**
* EulixOS Platform Server API
* Platform open APIs
*
* OpenAPI spec version: 0.1.0
* Contact: dev-support@eulixos.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface ESSpaceGatewayNotificationServiceApi: NSObject <ESApi>

extern NSString* kESSpaceGatewayNotificationServiceApiErrorDomain;
extern NSInteger kESSpaceGatewayNotificationServiceApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(ESApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 
/// Try to poll the current Notification of server.
///
/// @param accessToken  (optional)
/// @param count  (optional)
/// 
///  code:200 message:"OK"
///
/// @return ESStatusResult*
-(NSURLSessionTask*) spaceV1ApiGatewayPollGetWithAccessToken: (NSString*) accessToken
    count: (NSString*) count
    completionHandler: (void (^)(ESStatusResult* output, NSError* error)) handler;


/// 
/// delete all notification.
///
/// @param accessTokenClientUUID 
/// @param body  (optional)
/// 
///  code:200 message:"OK"
///
/// @return ESResponseBaseLong*
-(NSURLSessionTask*) spaceV1ApiNotificationAllDeletePostWithAccessTokenClientUUID: (NSString*) accessTokenClientUUID
    body: (ESMessageIdInfo*) body
    completionHandler: (void (^)(ESResponseBaseLong* output, NSError* error)) handler;


/// 
/// get all notification. page 页码，默认1 pageSize页码大小，默认10
///
/// @param accessTokenClientUUID 
/// @param body  (optional)
/// 
///  code:200 message:"OK"
///
/// @return ESResponseBaseNotificationPageInfo*
-(NSURLSessionTask*) spaceV1ApiNotificationAllPostWithAccessTokenClientUUID: (NSString*) accessTokenClientUUID
    body: (ESNotificationPageQueryInfo*) body
    completionHandler: (void (^)(ESResponseBaseNotificationPageInfo* output, NSError* error)) handler;


/// 
/// delete notification.
///
/// @param messageId 
/// 
///  code:200 message:"OK"
///
/// @return ESResponseBaseLong*
-(NSURLSessionTask*) spaceV1ApiNotificationDeleteWithMessageId: (NSString*) messageId
    completionHandler: (void (^)(ESResponseBaseLong* output, NSError* error)) handler;


/// 
/// get notification.
///
/// @param messageId 
/// 
///  code:200 message:"OK"
///
/// @return ESResponseBaseNotificationEntity*
-(NSURLSessionTask*) spaceV1ApiNotificationGetWithMessageId: (NSString*) messageId
    completionHandler: (void (^)(ESResponseBaseNotificationEntity* output, NSError* error)) handler;


/// 
/// add notification.
///
/// @param body  (optional)
/// 
///  code:200 message:"OK"
///
/// @return NSString*
-(NSURLSessionTask*) spaceV1ApiNotificationPostWithBody: (ESMessage*) body
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// 
/// set notification read status .
///
/// @param accessTokenClientUUID 
/// @param body  (optional)
/// 
///  code:200 message:"OK"
///
/// @return ESResponseBaseInteger*
-(NSURLSessionTask*) spaceV1ApiNotificationSetReadPostWithAccessTokenClientUUID: (NSString*) accessTokenClientUUID
    body: (ESMessageIdInfo*) body
    completionHandler: (void (^)(ESResponseBaseInteger* output, NSError* error)) handler;



@end
